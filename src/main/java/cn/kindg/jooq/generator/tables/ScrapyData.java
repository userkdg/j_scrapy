/*
 * This file is generated by jOOQ.
 */
package cn.kindg.jooq.generator.tables;


import cn.kindg.jooq.generator.Indexes;
import cn.kindg.jooq.generator.JScrapy;
import cn.kindg.jooq.generator.Keys;
import cn.kindg.jooq.generator.tables.records.ScrapyDataRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScrapyData extends TableImpl<ScrapyDataRecord> {

    private static final long serialVersionUID = -1722684291;

    /**
     * The reference instance of <code>j_scrapy.scrapy_data</code>
     */
    public static final ScrapyData SCRAPY_DATA = new ScrapyData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScrapyDataRecord> getRecordType() {
        return ScrapyDataRecord.class;
    }

    /**
     * The column <code>j_scrapy.scrapy_data.id</code>.
     */
    public final TableField<ScrapyDataRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>j_scrapy.scrapy_data.data_source</code>.
     */
    public final TableField<ScrapyDataRecord, String> DATA_SOURCE = createField("data_source", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>j_scrapy.scrapy_data.data_type</code>.
     */
    public final TableField<ScrapyDataRecord, String> DATA_TYPE = createField("data_type", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>j_scrapy.scrapy_data.create_time</code>.
     */
    public final TableField<ScrapyDataRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>j_scrapy.scrapy_data.remark</code>.
     */
    public final TableField<ScrapyDataRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>j_scrapy.scrapy_data.data_count</code>.
     */
    public final TableField<ScrapyDataRecord, Long> DATA_COUNT = createField("data_count", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>j_scrapy.scrapy_data</code> table reference
     */
    public ScrapyData() {
        this(DSL.name("scrapy_data"), null);
    }

    /**
     * Create an aliased <code>j_scrapy.scrapy_data</code> table reference
     */
    public ScrapyData(String alias) {
        this(DSL.name(alias), SCRAPY_DATA);
    }

    /**
     * Create an aliased <code>j_scrapy.scrapy_data</code> table reference
     */
    public ScrapyData(Name alias) {
        this(alias, SCRAPY_DATA);
    }

    private ScrapyData(Name alias, Table<ScrapyDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScrapyData(Name alias, Table<ScrapyDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ScrapyData(Table<O> child, ForeignKey<O, ScrapyDataRecord> key) {
        super(child, key, SCRAPY_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JScrapy.J_SCRAPY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SCRAPY_DATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ScrapyDataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SCRAPY_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScrapyDataRecord> getPrimaryKey() {
        return Keys.KEY_SCRAPY_DATA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScrapyDataRecord>> getKeys() {
        return Arrays.<UniqueKey<ScrapyDataRecord>>asList(Keys.KEY_SCRAPY_DATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScrapyData as(String alias) {
        return new ScrapyData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScrapyData as(Name alias) {
        return new ScrapyData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScrapyData rename(String name) {
        return new ScrapyData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ScrapyData rename(Name name) {
        return new ScrapyData(name, null);
    }
}
